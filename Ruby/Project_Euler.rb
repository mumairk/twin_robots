# If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.
# The sum of these multiples is 23.
# Find the sum of all the multiples of 3 or 5 below 1000.


def adding some_number
i = 0
sum = 0
  while i < some_number
    if i % 5 == 0 or i % 3 == 0
            sum  += i
            end
            i += 1
        end
        puts sum
end

# Even Fibonacci numbers
# Problem 2
# Each new term in the Fibonacci sequence is generated by adding the previous two terms.
# By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million,
# find the sum of the even-valued terms.*/

def fibSum someNumber
  currentNumber = 2
  lastNumber = 1
  sum = 0
  while currentNumber < someNumber
    sum += currentNumber if currentNumber % 2 == 0
      tempNumber = currentNumber
      currentNumber += lastNumber
      lastNumber = tempNumber
    end
  puts sum
end

=begin
Largest prime factor
Problem 3
The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?
=end

def largestPrime someNumber
  pNumers = Array.new
  i = 2
  while someNumber > 1
    while someNumber % i == 0
      pNumers << i
      someNumber /= i
    end
    i += 1
  end
  puts pNumers.last
end

adding 10
fibSum 4000000
largestPrime 600851475143
